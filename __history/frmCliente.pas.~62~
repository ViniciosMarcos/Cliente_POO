unit frmCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Imaging.pngimage,
  Vcl.StdCtrls, Vcl.Buttons, uCliente, System.JSON, REST.Types,
  Data.Bind.Components, Data.Bind.ObjectScope, REST.Client;

type
  TF_Cliente = class(TForm)
    PnlTopo: TPanel;
    PnlBottom: TPanel;
    PnlCenter: TPanel;
    ImgCliente: TImage;
    LblCadastro: TLabel;
    EditID: TLabeledEdit;
    EditNome: TLabeledEdit;
    EditEndereco: TLabeledEdit;
    EditBairro: TLabeledEdit;
    EditNumero: TLabeledEdit;
    EditMunicipio: TLabeledEdit;
    EditEstado: TLabeledEdit;
    EditCEP: TLabeledEdit;
    EditCPFCNPJ: TLabeledEdit;
    EditTelefone: TLabeledEdit;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    BtnSalvar: TBitBtn;
    procedure EditCEPExit(Sender: TObject);
    procedure BtnSalvarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_Cliente: TF_Cliente;

implementation

{$R *.dfm}



procedure TF_Cliente.BtnSalvarClick(Sender: TObject);
var
  Teste :TCliente;
begin
  Teste := TCliente.Create;
  Try
    Teste.Nome := EditNome.Text;
    teste.AdicionarCliente(Teste);
  Except
    ShowMessage('Não foi possível inserir o novo cliente.');
  End;
end;

procedure TF_Cliente.EditCEPExit(Sender: TObject);
var
  Json: TJSONObject;
begin
  //Utilizacao da API ViaCEP
  RESTRequest1.Resource := Format('ws/%s/json/', [EditCEP.Text]);
  try
    RESTRequest1.Execute;
    Json := TJSONObject.ParseJSONValue(RESTResponse1.Content) as TJSONObject;
    EditMunicipio.Text := Json.GetValue('localidade').Value;
    EditEstado.Text    := Json.GetValue('uf').Value;
  finally

  end;
end;

end.
